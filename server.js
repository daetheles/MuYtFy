const express = require('express');
const cors = require('cors');
const ytdl = require('ytdl-core');
const fetch = require('node-fetch');

const app = express();
const PORT = 3000;

// Middleware
app.use(cors());
app.use(express.json());

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static('.'));

// API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫–∞ YouTube
app.get('/api/stream/youtube/:videoId', async (req, res) => {
    try {
        const { videoId } = req.params;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ videoId –≤–∞–ª–∏–¥–Ω—ã–π
        if (!ytdl.validateID(videoId)) {
            return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π YouTube ID' });
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
        const info = await ytdl.getInfo(videoId);
        
        // –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π –∞—É–¥–∏–æ —Ñ–æ—Ä–º–∞—Ç
        const audioFormats = ytdl.filterFormats(info.formats, 'audioonly');
        const bestAudio = audioFormats[0];

        if (!bestAudio) {
            return res.status(404).json({ error: '–ê—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' });
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ç–æ–∫–µ
        res.json({
            success: true,
            videoId: videoId,
            title: info.videoDetails.title,
            duration: info.videoDetails.lengthSeconds,
            audioUrl: bestAudio.url,
            format: bestAudio.mimeType
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ YouTube —Å—Ç—Ä–∏–º–∏–Ω–≥–∞:', error);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫–∞' });
    }
});

// API –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ YouTube –∞—É–¥–∏–æ
app.get('/api/stream/youtube/:videoId/audio', async (req, res) => {
    try {
        const { videoId } = req.params;
        
        if (!ytdl.validateID(videoId)) {
            return res.status(400).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π YouTube ID' });
        }

        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
        const info = await ytdl.getInfo(videoId);
        
        // –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π –∞—É–¥–∏–æ —Ñ–æ—Ä–º–∞—Ç
        const audioFormats = ytdl.filterFormats(info.formats, 'audioonly');
        const bestAudio = audioFormats[0];

        if (!bestAudio) {
            return res.status(404).json({ error: '–ê—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' });
        }

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
        res.setHeader('Content-Type', 'audio/mpeg');
        res.setHeader('Accept-Ranges', 'bytes');
        res.setHeader('Cache-Control', 'public, max-age=3600');

        // –°—Ç—Ä–∏–º–∏–º –∞—É–¥–∏–æ
        ytdl(videoId, {
            format: bestAudio,
            quality: 'highestaudio'
        }).pipe(res);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ YouTube —Å—Ç—Ä–∏–º–∏–Ω–≥–∞:', error);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∞—É–¥–∏–æ' });
    }
});

// API –¥–ª—è Spotify (—ç–º—É–ª—è—Ü–∏—è MediaServiceCore)
app.get('/api/stream/spotify/:trackId', async (req, res) => {
    try {
        const { trackId } = req.params;
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ –∫ Spotify API
        // –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫–∞ —á–µ—Ä–µ–∑ MediaServiceCore
        
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–µ
        res.json({
            success: true,
            trackId: trackId,
            message: 'Spotify —Å—Ç—Ä–∏–º–∏–Ω–≥ —Ç—Ä–µ–±—É–µ—Ç MediaServiceCore',
            note: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 30-—Å–µ–∫—É–Ω–¥–Ω—ã–µ –ø—Ä–µ–≤—å—é –∏–∑ Spotify API'
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ Spotify —Å—Ç—Ä–∏–º–∏–Ω–≥–∞:', error);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Spotify –ø–æ—Ç–æ–∫–∞' });
    }
});

// API –¥–ª—è –ø–æ–∏—Å–∫–∞ YouTube
app.get('/api/search/youtube', async (req, res) => {
    try {
        const { q } = req.query;
        
        if (!q) {
            return res.status(400).json({ error: '–ó–∞–ø—Ä–æ—Å –ø–æ–∏—Å–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' });
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º YouTube Data API v3 (—Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á)
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        res.json({
            success: true,
            query: q,
            message: 'YouTube –ø–æ–∏—Å–∫ —Ç—Ä–µ–±—É–µ—Ç API –∫–ª—é—á',
            note: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –≤ –ø–ª–µ–µ—Ä–µ'
        });

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ YouTube –ø–æ–∏—Å–∫–∞:', error);
        res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞' });
    }
});

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
    res.sendFile(__dirname + '/index.html');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    console.log(`üì° API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:${PORT}/api`);
    console.log(`üé¨ YouTube —Å—Ç—Ä–∏–º–∏–Ω–≥: http://localhost:${PORT}/api/stream/youtube/:videoId`);
});
